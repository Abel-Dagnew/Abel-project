# Trigger the pipeline on changes to the main branch
trigger:
  branches:
    include:
      - main

# Use the latest Ubuntu VM image
pool:
  vmImage: 'ubuntu-latest'

# Define build and deployment stages
stages:
  - stage: Build
    displayName: 'Build Stage'
    jobs:
      - job: Build
        displayName: 'Build Job'
        steps:
          # Checkout code
          - checkout: self

          # Install Node.js
          - task: NodeTool@0
            inputs:
              versionSpec: '22.x'
            displayName: 'Install Node.js'

          # Install npm dependencies
          - script: |
              cd app
              npm install
            displayName: 'Install Dependencies'

          # Build the application
          - script: |
              cd app
              npm run build
            displayName: 'Build Application'

          # Create a zip file of the application and store it in the artifact staging directory
          - script: |
              cd app
              zip -r $(Build.ArtifactStagingDirectory)/node_app.zip .  # Use Artifact Staging Directory
            displayName: 'Create Node.js App ZIP'

  - stage: Deploy
    displayName: 'Deploy Stage'
    dependsOn: 
      - Build
    jobs:
      - job: Provision
        displayName: 'Provision Infrastructure with Terraform'
        steps:
          # Install Terraform
          - script: |
              curl -o terraform.zip https://releases.hashicorp.com/terraform/1.0.11/terraform_1.0.11_linux_amd64.zip
              unzip terraform.zip
              sudo mv terraform /usr/local/bin/
              terraform -version
            displayName: 'Install Terraform'

          # Authenticate and initialize Terraform
          - script: |
              echo "Initializing Terraform..."
              terraform init
              terraform plan -out=tfplan
              terraform apply -auto-approve
            displayName: 'Provision Infrastructure'

      - job: Deploy
        displayName: 'Deployment Job'
        timeoutInMinutes: 120
        steps:
          # Authenticate Azure CLI with Azure service principal
          - script: |
              echo "Authenticating with Azure CLI using Service Principal..."
              az login --service-principal -u $(ARM_CLIENT_ID) -p $(ARM_CLIENT_SECRET) --tenant $(ARM_TENANT_ID)
              az account set --subscription $(ARM_SUBSCRIPTION_ID)
              echo "Authenticated with Azure CLI."
            displayName: 'Azure CLI Authentication'

          # Deploy the Node.js app using zip file directly from the artifact staging directory
          - script: |
              az webapp deployment source config-zip \
                --resource-group "AbelDevopsRG33" \
                --name "AbelDevops23443" \
                --src "$(Build.ArtifactStagingDirectory)/node_app.zip"  # Directly reference the zip file from the artifact staging directory
            displayName: 'Deploy Node.js App to App Service'
